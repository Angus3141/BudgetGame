<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Integer Bank Game</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-color: #f4f4f4;
    }
    .bank-statement {
      width: 80%;
      max-width: 600px;
      background-color: #ffffff;
      border: 1px solid #ccc;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    h1 {
      text-align: center;
      color: #333;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: center;
    }
    th {
      background-color: #f2f2f2;
    }
    .input-section {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .input-section input {
      width: 60%;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    .input-section button {
      padding: 8px 16px;
      background-color: #28a745;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    .input-section button:hover {
      background-color: #218838;
    }
    .feedback {
      text-align: center;
      margin-top: 10px;
    }
  </style>
</head>
<body>

<div class="bank-statement">
  <h1>Bank Statement Game</h1>
  <table>
    <thead>
      <tr>
        <th>Date</th>
        <th>Description</th>
        <th>Amount</th>
        <th>Balance</th>
      </tr>
    </thead>
    <tbody id="statement-body">
      <tr>
        <td id="date">2024-10-28</td>
        <td id="description">Starting Balance</td>
        <td>-</td>
        <td id="current-balance">1000</td>
      </tr>
    </tbody>
  </table>
  
  <div class="input-section">
    <label for="new-balance">New Balance:</label>
    <input type="number" id="new-balance" placeholder="Enter the new balance">
    <button onclick="checkBalance()">Submit</button>
  </div>
  <div class="feedback" id="feedback"></div>
</div>

<script>
  // Set initial balance
  let balance = 1000;
  const feedback = document.getElementById("feedback");

  // Generate a random transaction (deposit or withdrawal)
  function generateTransaction() {
    const isDeposit = Math.random() > 0.5;
    const amount = Math.floor(Math.random() * 200) + 1; // Random amount between 1 and 200
    const transaction = isDeposit ? amount : -amount;
    const description = isDeposit ? "Deposit" : "Withdrawal";

    // Update statement
    const statementBody = document.getElementById("statement-body");
    const row = document.createElement("tr");
    row.innerHTML = `
      <td>${new Date().toISOString().split("T")[0]}</td>
      <td>${description}</td>
      <td>${transaction}</td>
      <td>-</td>
    `;
    statementBody.appendChild(row);

    // Return the transaction value
    return transaction;
  }

  // Start with the first transaction
  let currentTransaction = generateTransaction();

  // Function to check the student's answer
  function checkBalance() {
    const newBalance = parseInt(document.getElementById("new-balance").value);
    const correctBalance = balance + currentTransaction;

    if (newBalance === correctBalance) {
      feedback.textContent = "Correct! Good job!";
      feedback.style.color = "green";
      // Update balance and reset for the next transaction
      balance = correctBalance;
      document.getElementById("current-balance").textContent = balance;
      document.getElementById("new-balance").value = "";
      currentTransaction = generateTransaction();
    } else {
      feedback.textContent = "Incorrect. Try again!";
      feedback.style.color = "red";
    }
  }
</script>

</body>
</html>
